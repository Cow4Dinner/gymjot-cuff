syntax = "proto3";

package com.gymjot.cuff;

import "nanopb.proto";

option java_multiple_files = true;
option java_package = "com.gymjot.cuff";
option csharp_namespace = "Com.Gymjot.Cuff";
option optimize_for = LITE_RUNTIME;

message MetadataEntry {
  string key = 1;
  string value = 2;
}

message ExerciseMetadata {
  repeated MetadataEntry entries = 1;
}

enum DeviceMode {
  DEVICE_MODE_IDLE = 0;
  DEVICE_MODE_AWAITING_EXERCISE = 1;
  DEVICE_MODE_SCANNING = 2;
  DEVICE_MODE_LOITER = 3;
}

enum OtaPhase {
  OTA_PHASE_IDLE = 0;
  OTA_PHASE_PREPARING = 1;
  OTA_PHASE_TRANSFER = 2;
  OTA_PHASE_APPLYING = 3;
  OTA_PHASE_ERROR = 4;
}

message DeviceCommand {
  uint64 timestamp_ms = 1;
  oneof command {
    SetTestModeCommand set_test_mode = 10;
    SetTargetFpsCommand set_target_fps = 11;
    ExerciseUpdateCommand exercise_update = 12;
    ResetRepsCommand reset_reps = 13;
    PowerCommand power = 14;
    FactoryResetCommand factory_reset = 15;
    SnapshotRequestCommand snapshot_request = 16;
    UpdateDeviceConfigCommand update_device_config = 17;
    OtaBeginCommand ota_begin = 18;
    OtaChunkCommand ota_chunk = 19;
    OtaCompleteCommand ota_complete = 20;
    ClearBondsCommand clear_bonds = 21;
    TakePhotoCommand take_photo = 22;
    StartVideoCommand start_video = 23;
    StopVideoCommand stop_video = 24;
  }
}

message SetTestModeCommand {
  bool enabled = 1;
}

message SetTargetFpsCommand {
  float fps = 1;
}

message ExerciseUpdateCommand {
  uint32 exercise_id = 1;
  string name = 2;
  ExerciseMetadata metadata = 3;
  bool set_min_travel_cm = 4;
  float min_travel_cm = 5;
  bool set_fps = 6;
  float fps = 7;
}

message ResetRepsCommand {}

message PowerCommand {
  bool shutdown = 1;
}

message FactoryResetCommand {
  bool confirm = 1;
}

message ClearBondsCommand {
  bool confirm = 1;
}

message SnapshotRequestCommand {}

message TakePhotoCommand {
  bool high_resolution = 1;
}

message UpdateDeviceConfigCommand {
  bool set_target_fps = 1;
  float target_fps = 2;
  bool set_loiter_fps = 3;
  float loiter_fps = 4;
  bool set_min_travel_cm = 5;
  float min_travel_cm = 6;
  bool set_max_rep_idle_ms = 7;
  uint32 max_rep_idle_ms = 8;
}

message OtaBeginCommand {
  uint32 total_size = 1;
  uint32 chunk_size = 2;
  string version = 3;
  bytes sha256 = 4;
}

message OtaChunkCommand {
  uint32 offset = 1;
  bytes data = 2;
}

message OtaCompleteCommand {
  bool apply = 1;
}

message StartVideoCommand {
  float fps = 1;                    // Video frame rate (default: 5 fps)
  bool enable_apriltag_detection = 2;  // Enable AprilTag detection in video frames
  bool enable_motion_detection = 3;    // Enable motion detection
}

message StopVideoCommand {
}

message DeviceEvent {
  uint64 timestamp_ms = 1;
  oneof event {
    BootEvent boot = 10;
    StatusEvent status = 11;
    TagEvent tag = 12;
    ExerciseRequestEvent exercise_request = 13;
    ExerciseBroadcastEvent exercise_broadcast = 14;
    ScanEvent scan = 15;
    RepEvent rep = 16;
    ExerciseReadyEvent exercise_ready = 17;
    SnapshotEvent snapshot = 18;
    OtaStatusEvent ota_status = 19;
    PowerEvent power_event = 20;
    PhotoMetaEvent photo_meta = 21;
    PhotoChunkEvent photo_chunk = 22;
    VideoFrameEvent video_frame = 23;
    AprilTagDetectedEvent apriltag_detected = 24;
    MotionDetectedEvent motion_detected = 25;
  }
}

message BootEvent {
  bool test_mode = 1;
  DeviceMode mode = 2;
  float fps = 3;
}

message StatusEvent {
  string status_label = 1;
  DeviceMode mode = 2;
  float fps = 3;
  bool test_mode = 4;
}

message TagEvent {
  uint32 tag_id = 1;
  bool from_test_mode = 2;
}

message ExerciseRequestEvent {
  uint32 tag_id = 1;
}

message ExerciseBroadcastEvent {
  uint32 exercise_id = 1;
  string name = 2;
  ExerciseMetadata metadata = 3;
  bool from_test_mode = 4;
}

message ExerciseReadyEvent {
  uint32 exercise_id = 1;
}

message ScanEvent {
  uint32 tag_id = 1;
  float distance_cm = 2;
  DeviceMode mode = 3;
  float fps = 4;
  bool has_exercise_name = 5;
  string exercise_name = 6;
}

message RepEvent {
  uint32 tag_id = 1;
  uint32 rep_count = 2;
  bool has_exercise_name = 3;
  string exercise_name = 4;
}

message SnapshotEvent {
  uint64 device_id = 1;
  string name = 2;
  DeviceMode mode = 3;
  bool test_mode = 4;
  float target_fps = 5;
  float loiter_fps = 6;
  float min_travel_cm = 7;
  uint32 max_rep_idle_ms = 8;
  bool camera_ready = 9;
  bool ota_in_progress = 10;
  uint32 active_tag_id = 11;

  // Connection telemetry (added for BLE diagnostics)
  bool ble_connected = 12;
  uint32 ble_mtu = 13;                    // Current MTU in bytes
  uint32 conn_interval_ms = 14;           // Connection interval in milliseconds (x100 for precision)
  uint32 conn_latency = 15;               // Slave latency
  uint32 supervision_timeout_ms = 16;     // Supervision timeout in milliseconds
  uint32 last_disconnect_reason = 17;     // Last HCI disconnect reason code
  uint32 bonded_count = 18;               // Number of bonded devices
}

message OtaStatusEvent {
  OtaPhase phase = 1;
  string message = 2;
  uint32 bytes_transferred = 3;
  uint32 total_bytes = 4;
  bool success = 5;
}

message PhotoMetaEvent {
  uint32 session_id = 1;
  uint32 total_bytes = 2;
  uint32 width = 3;
  uint32 height = 4;
  string mime_type = 5 [(nanopb).max_length = 32];
}

message PhotoChunkEvent {
  uint32 session_id = 1;
  uint32 offset = 2;
  bytes data = 3 [(nanopb).max_size = 200];
  bool final_chunk = 4;
}
message PowerEvent {
  string state = 1;
}

message VideoFrameEvent {
  uint32 session_id = 1;
  uint32 frame_number = 2;
  uint32 total_bytes = 3;
  uint32 offset = 4;
  bytes data = 5 [(nanopb).max_size = 200];
  bool final_chunk = 6;
  uint32 width = 7;
  uint32 height = 8;
}

message AprilTagDetectedEvent {
  uint32 tag_id = 1;
  float distance_cm = 2;
  float decision_margin = 3;
  // Corner positions (normalized 0-1)
  float corner_x1 = 4;
  float corner_y1 = 5;
  float corner_x2 = 6;
  float corner_y2 = 7;
  float corner_x3 = 8;
  float corner_y3 = 9;
  float corner_x4 = 10;
  float corner_y4 = 11;
}

message MotionDetectedEvent {
  float motion_score = 1;  // 0-100, percentage of pixels changed
  uint32 pixels_changed = 2;
  uint32 total_pixels = 3;
}



